[tool:pytest]
# CityPulse Unified Testing Framework Configuration

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 8.0

# Add options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=core
    --cov-report=html:reports/coverage
    --cov-report=json:reports/coverage.json
    --cov-report=term-missing
    --html=reports/unified-reports/pytest-report.html
    --self-contained-html
    --json-report
    --json-report-file=reports/unified-reports/pytest-report.json

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    frontend: Frontend tests
    api: API tests
    database: Database tests
    auth: Authentication tests
    performance: Performance tests
    security: Security tests
    smoke: Smoke tests
    slow: Slow running tests
    real: Tests that require real services
    mock: Tests that use mock services
    
# Test timeout (in seconds)
timeout = 300

# Asyncio configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:pkg_resources
    ignore::UserWarning:google.rpc

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Parallel execution
# Uncomment to enable parallel test execution
# -n auto

# Coverage configuration
[coverage:run]
source = core
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
